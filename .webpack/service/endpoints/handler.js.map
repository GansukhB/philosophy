{"version":3,"file":"endpoints/handler.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNO,eAAeA,UAAf,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AAC/CA,EAAAA,OAAO,CAACC,8BAAR,GAAyC,KAAzC;;AACA,MAAI;AACF,UAAMC,YAAY,GAAGH,KAAK,CAACI,cAAN,CAAqBD,YAA1C;;AAEA,QAAIA,YAAY,KAAK,OAArB,EAA8B;AAC5B,aAAO,MAAME,KAAK,CAAC;AAAEL,QAAAA;AAAF,OAAD,CAAlB;AACD;;AACD,QAAIG,YAAY,KAAK,OAArB,EAA8B;AAC5B,aAAO,MAAMG,KAAK,CAAC;AAAEN,QAAAA;AAAF,OAAD,CAAlB;AACD;AACF,GATD,CASE,OAAOO,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,C","sources":["webpack://philosophy/webpack/bootstrap","webpack://philosophy/webpack/runtime/define property getters","webpack://philosophy/webpack/runtime/hasOwnProperty shorthand","webpack://philosophy/webpack/runtime/make namespace object","webpack://philosophy/./endpoints/handler.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export async function apiService(event, context) {\n  context.callbackWaitsForEmptyEventLoop = false;\n  try {\n    const functionName = event.pathParameters.functionName;\n\n    if (functionName === \"login\") {\n      return await login({ event });\n    }\n    if (functionName === \"token\") {\n      return await token({ event });\n    }\n  } catch (error) {\n    return error;\n  }\n}\n"],"names":["apiService","event","context","callbackWaitsForEmptyEventLoop","functionName","pathParameters","login","token","error"],"sourceRoot":""}